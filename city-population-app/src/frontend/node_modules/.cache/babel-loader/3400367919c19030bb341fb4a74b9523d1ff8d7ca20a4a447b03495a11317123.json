{"ast":null,"code":"import React,{useState}from\"react\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";function App(){const[health,setHealth]=useState(\"\");const[upsertResponse,setUpsertResponse]=useState(\"\");const[queryResponse,setQueryResponse]=useState(\"\");const checkHealth=async()=>{try{const response=await fetch(\"http://localhost:8000/health\");const text=await response.text();setHealth(text);}catch(error){setHealth(\"Error: \"+error.message);}};const upsertCity=async()=>{try{// Example data (adjust as needed)\nconst city=\"New York\";const population=8500000;const response=await fetch(\"http://localhost:8000/upsert\",{method:\"POST\",headers:{\"Content-Type\":\"application/json\"},body:JSON.stringify({city,population})});const result=await response.json();setUpsertResponse(JSON.stringify(result));}catch(error){setUpsertResponse(\"Error: \"+error.message);}};const queryCity=async()=>{try{// Example city name\nconst city=\"New York\";const response=await fetch(\"http://localhost:8000/query?city=\".concat(city));const result=await response.json();setQueryResponse(JSON.stringify(result));}catch(error){setQueryResponse(\"Error: \"+error.message);}};return/*#__PURE__*/_jsxs(\"div\",{style:{padding:\"1rem\",fontFamily:\"Arial\"},children:[/*#__PURE__*/_jsx(\"h1\",{children:\"City Population API Explorer\"}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"1rem\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:checkHealth,children:\"Check Health\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Health Response:\"}),\" \",health]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"1rem\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:upsertCity,children:\"Upsert City\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Upsert Response:\"}),\" \",upsertResponse]})]}),/*#__PURE__*/_jsxs(\"div\",{style:{marginBottom:\"1rem\"},children:[/*#__PURE__*/_jsx(\"button\",{onClick:queryCity,children:\"Query City\"}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"strong\",{children:\"Query Response:\"}),\" \",queryResponse]})]})]});}export default App;","map":{"version":3,"names":["React","useState","jsx","_jsx","jsxs","_jsxs","App","health","setHealth","upsertResponse","setUpsertResponse","queryResponse","setQueryResponse","checkHealth","response","fetch","text","error","message","upsertCity","city","population","method","headers","body","JSON","stringify","result","json","queryCity","concat","style","padding","fontFamily","children","marginBottom","onClick"],"sources":["/Users/abhireddy/local-codebase/City-Population-fullstack-project/city-population-app/src/frontend/src/node-js/App.js"],"sourcesContent":["import React, { useState } from \"react\";\n\nfunction App() {\n  const [health, setHealth] = useState(\"\");\n  const [upsertResponse, setUpsertResponse] = useState(\"\");\n  const [queryResponse, setQueryResponse] = useState(\"\");\n\n  const checkHealth = async () => {\n    try {\n      const response = await fetch(\"http://localhost:8000/health\");\n      const text = await response.text();\n      setHealth(text);\n    } catch (error) {\n      setHealth(\"Error: \" + error.message);\n    }\n  };\n\n  const upsertCity = async () => {\n    try {\n      // Example data (adjust as needed)\n      const city = \"New York\";\n      const population = 8500000;\n      const response = await fetch(\"http://localhost:8000/upsert\", {\n        method: \"POST\",\n        headers: { \"Content-Type\": \"application/json\" },\n        body: JSON.stringify({ city, population }),\n      });\n      const result = await response.json();\n      setUpsertResponse(JSON.stringify(result));\n    } catch (error) {\n      setUpsertResponse(\"Error: \" + error.message);\n    }\n  };\n\n  const queryCity = async () => {\n    try {\n      // Example city name\n      const city = \"New York\";\n      const response = await fetch(`http://localhost:8000/query?city=${city}`);\n      const result = await response.json();\n      setQueryResponse(JSON.stringify(result));\n    } catch (error) {\n      setQueryResponse(\"Error: \" + error.message);\n    }\n  };\n\n  return (\n    <div style={{ padding: \"1rem\", fontFamily: \"Arial\" }}>\n      <h1>City Population API Explorer</h1>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <button onClick={checkHealth}>Check Health</button>\n        <div>\n          <strong>Health Response:</strong> {health}\n        </div>\n      </div>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <button onClick={upsertCity}>Upsert City</button>\n        <div>\n          <strong>Upsert Response:</strong> {upsertResponse}\n        </div>\n      </div>\n      <div style={{ marginBottom: \"1rem\" }}>\n        <button onClick={queryCity}>Query City</button>\n        <div>\n          <strong>Query Response:</strong> {queryResponse}\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}